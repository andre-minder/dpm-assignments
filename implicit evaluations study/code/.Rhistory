mutate(Gender = stringr::str_to_sentence(Gender)) |> # Change the case of the Gender variable so that it prints nicely
kable() |>
kable_classic(full_width = FALSE)
# overall self-reported evaluations
dat_mean_ratings <- data_processed_after_exclusions |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_mean_ratings_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings,
dat_mean_ratings_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
# Histogram for mean self-reported evaluation
hist_sr <- ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("Mean self-reported evaluation") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
ggtitle("Histogram") +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank())
# density plot for mean self-reported evaluation
dens_sr <- ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_density(fill = "lightblue",
color = "darkblue") +
scale_x_continuous(breaks = pretty_breaks(n=7),
limits = c(1,7),
name = "Mean self-reported evaluation") +
scale_y_continuous(limits = c(0,1),
name = "Density") +
ggtitle("Density plot") +
theme_classic()
box_sr <- ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_boxplot(width = 0.2, fill = "dodgerblue") +
scale_y_continuous(breaks = NULL,
label = NULL,
name = "") +
scale_x_continuous(limits = c(1,7),
breaks = pretty_breaks(n = 7),
name = "Mean self-reported evaluation") +
ggtitle("Boxplot") +
theme_classic()
dens_sr + hist_sr + box_sr + plot_annotation("Descriptive plots for mean self-reported evaluation")
# overall AMP evaluations
dat_mean_ratings_AMP <- data_processed_after_exclusions |>
summarise(Mean = mean(AMP_score, na.rm = TRUE),
SD = sd(AMP_score, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# AMP evaluations by gender category
dat_mean_ratings_by_gender_AMP <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(AMP_score, na.rm = TRUE),
SD = sd(AMP_score, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings_AMP,
dat_mean_ratings_by_gender_AMP) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "AMP evaluations" = 3)) |>
kable_classic(full_width = FALSE)
#histogram for AMP score
hist_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("AMP score") +
ylab("Frequency") +
ggtitle("Histogram") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 4))
# density plot for AMP score
dens_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_density(fill = "lightblue",
color = "darkblue") +
scale_x_continuous(breaks = pretty_breaks(n = 4),
limits = c(0,1),
name = "AMP score") +
scale_y_continuous(limits = c(0,5),
name = "Density") +
ggtitle("Density plot") +
theme_classic()
box_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_boxplot(width = 0.2, fill = "dodgerblue") +
scale_y_continuous(breaks = NULL,
label = NULL,
name = "") +
scale_x_continuous(limits = c(0,1),
breaks = pretty_breaks(n = 4),
name = "AMP score") +
ggtitle("Boxplot") +
theme_classic()
dens_amp + hist_amp + box_amp + plot_annotation("Descriptive plots for AMP evaluations")
#
jitter_plot <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
ggtitle("Scatter plot") +
theme_classic()
point_plot <- ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_point(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
theme_classic()
point_plot_2 <- ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_point(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
scale_x_continuous(limits = c(3.2,5)) +
theme_classic()
jitter_plot + point_plot +
plot_annotation(title = "Scatter plots of AMP and self-reported evaluations with switched axes",
caption = "Note: It does not matter which version we use for the correlation. Also                             note, that one plot is jittered.")
point_plot + point_plot_2
axialHist <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation, color = gender)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
ggtitle("Scatter plot AMP score - mean evaluation") +
xlab("AMP score") +
scale_y_continuous(limits = c(1,7),
breaks = pretty_breaks(n = 7),
name = "Mean self-reported evaluation") +
theme_classic() +
theme(legend.position = c(0.8, 0.7),
legend.box.background = element_rect(color = "black",
linewidth = 1.5)) +
scale_color_discrete(name = "Gender", labels = c("Female", "Male", "Non-binary"))
scatter_hist <- ggMarginal(axialHist, groupColour = TRUE, groupFill = TRUE)
scatter_hist
scatter_repel <- data_processed_after_exclusions |>
mutate(extreme = ifelse(mean_evaluation > 5, subject, "")) |>
ggplot(aes(x = AMP_score,
y = mean_evaluation,
label = extreme)) +
geom_point() +
geom_text_repel() +
ggtitle("Scatter plot for AMP score and mean evaluation") +
xlab("AMP score") +
scale_y_continuous(limits = c(1,7),
breaks = pretty_breaks(n = 7),
name = "Mean self-reported evaluation") +
theme_classic()
scatter_repel
from <- c(xmin = 1, xmax = 1.2, ymin = 0.5, ymax = 0.6)
to <- c(xmin = 4, xmax = 5, ymin = 0.75, ymax = 1)
point_plot + geom_magnify(from = from, to = to) +
theme_classic()
# Perform correlation analysis and report the result
results_cor <- data_processed_after_exclusions |>
with(cor.test(mean_evaluation, AMP_score,
alternative = "two.sided",
method = "spearman",
exact = FALSE))
apa_print(results_cor)
?apa_print
apa_print(results_cor$full_result)
apa_print(results_cor)
apa_print(results_cor$full_result)
apa_print(results_cor)$full_result)
apa_print(results_cor)$full_result
apa_print(results_cor)$full_result
# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
library(ggrepel)
library(remotes)
library(ggmagnify)
library(ggExtra)
library(wesanderson)
library(easystats)
library(ggthemes)
library(patchwork)
library(papaja)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Whole sample" = 1)) |> # note that you can add header rows to tables like this. The "1" indicates the number of columns the header should span. The sum of these numbers must equal the number of columns or you'll get an error.
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
count(name = "n") |>
kable() |>
add_header_above(header = c("For analysis" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |> # Change the case of the Gender variable so that it prints nicely
kable() |>
kable_classic(full_width = FALSE)
# overall self-reported evaluations
dat_mean_ratings <- data_processed_after_exclusions |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_mean_ratings_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings,
dat_mean_ratings_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
# Histogram for mean self-reported evaluation
hist_sr <- ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("Mean self-reported evaluation") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
ggtitle("Histogram") +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank())
# density plot for mean self-reported evaluation
dens_sr <- ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_density(fill = "lightblue",
color = "darkblue") +
scale_x_continuous(breaks = pretty_breaks(n=7),
limits = c(1,7),
name = "Mean self-reported evaluation") +
scale_y_continuous(limits = c(0,1),
name = "Density") +
ggtitle("Density plot") +
theme_classic()
box_sr <- ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_boxplot(width = 0.2, fill = "dodgerblue") +
scale_y_continuous(breaks = NULL,
label = NULL,
name = "") +
scale_x_continuous(limits = c(1,7),
breaks = pretty_breaks(n = 7),
name = "Mean self-reported evaluation") +
ggtitle("Boxplot") +
theme_classic()
dens_sr + hist_sr + box_sr + plot_annotation("Descriptive plots for mean self-reported evaluation")
# overall AMP evaluations
dat_mean_ratings_AMP <- data_processed_after_exclusions |>
summarise(Mean = mean(AMP_score, na.rm = TRUE),
SD = sd(AMP_score, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# AMP evaluations by gender category
dat_mean_ratings_by_gender_AMP <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(AMP_score, na.rm = TRUE),
SD = sd(AMP_score, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings_AMP,
dat_mean_ratings_by_gender_AMP) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "AMP evaluations" = 3)) |>
kable_classic(full_width = FALSE)
#histogram for AMP score
hist_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("AMP score") +
ylab("Frequency") +
ggtitle("Histogram") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 4))
# density plot for AMP score
dens_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_density(fill = "lightblue",
color = "darkblue") +
scale_x_continuous(breaks = pretty_breaks(n = 4),
limits = c(0,1),
name = "AMP score") +
scale_y_continuous(limits = c(0,5),
name = "Density") +
ggtitle("Density plot") +
theme_classic()
box_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_boxplot(width = 0.2, fill = "dodgerblue") +
scale_y_continuous(breaks = NULL,
label = NULL,
name = "") +
scale_x_continuous(limits = c(0,1),
breaks = pretty_breaks(n = 4),
name = "AMP score") +
ggtitle("Boxplot") +
theme_classic()
dens_amp + hist_amp + box_amp + plot_annotation("Descriptive plots for AMP evaluations")
#
jitter_plot <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
ggtitle("Scatter plot") +
theme_classic()
point_plot <- ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_point(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
theme_classic()
point_plot_2 <- ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_point(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
scale_x_continuous(limits = c(3.2,5)) +
theme_classic()
jitter_plot + point_plot +
plot_annotation(title = "Scatter plots of AMP and self-reported evaluations with switched axes",
caption = "Note: It does not matter which version we use for the correlation. Also                             note, that one plot is jittered.")
point_plot + point_plot_2
axialHist <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation, color = gender)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
ggtitle("Scatter plot AMP score - mean evaluation") +
xlab("AMP score") +
scale_y_continuous(limits = c(1,7),
breaks = pretty_breaks(n = 7),
name = "Mean self-reported evaluation") +
theme_classic() +
theme(legend.position = c(0.8, 0.7),
legend.box.background = element_rect(color = "black",
linewidth = 1.5)) +
scale_color_discrete(name = "Gender", labels = c("Female", "Male", "Non-binary"))
scatter_hist <- ggMarginal(axialHist, groupColour = TRUE, groupFill = TRUE)
scatter_hist
scatter_repel <- data_processed_after_exclusions |>
mutate(extreme = ifelse(mean_evaluation > 5, subject, "")) |>
ggplot(aes(x = AMP_score,
y = mean_evaluation,
label = extreme)) +
geom_point() +
geom_text_repel() +
ggtitle("Scatter plot for AMP score and mean evaluation") +
xlab("AMP score") +
scale_y_continuous(limits = c(1,7),
breaks = pretty_breaks(n = 7),
name = "Mean self-reported evaluation") +
theme_classic()
scatter_repel
from <- c(xmin = 1, xmax = 1.2, ymin = 0.5, ymax = 0.6)
to <- c(xmin = 4, xmax = 5, ymin = 0.75, ymax = 1)
point_plot + geom_magnify(from = from, to = to) +
theme_classic()
# Perform correlation analysis and report the result
results_cor <- data_processed_after_exclusions |>
with(cor.test(mean_evaluation, AMP_score,
alternative = "two.sided",
method = "spearman",
exact = FALSE))
results_cor
# Constants and subset
rain_height <- .1
male_female_subset <- data_processed_after_exclusions |>
filter(gender %in% c("male", "female"))
# Split histogram
sr_gender_hist <- male_female_subset |>
ggplot(aes(x = mean_evaluation, fill = gender)) +
geom_histogram(binwidth = 1,
boundary = 0) +
xlab("Mean self-reported evaluations") +
ylab("Frequency") +
ggtitle("Histogram") +
scale_x_continuous(breaks = pretty_breaks(n = 7),
limits = c(0, 7)) +
facet_wrap(~gender) +
theme_classic() +
theme(legend.position = "none")
# Split violin plot
sr_gender_violin <- male_female_subset |>
ggplot(aes(x = gender, y = mean_evaluation, fill = gender)) +
introdataviz::geom_split_violin(alpha = .4, trim = FALSE,
na.rm=TRUE) +
geom_boxplot(width = 0.1) +
xlab("Gender") +
ylab("Mean self-reported evaluations") +
ggtitle("Violin plot") +
scale_y_continuous(breaks = pretty_breaks(n = 7),
limits = c(1, 7)) +
scale_x_discrete(breaks = "",
labels = "") +
theme_tufte() +
theme(legend.position = c(.25,.85),
legend.title = element_blank())
# Split raincloud plot
sr_gender_raincloud <- ggplot(male_female_subset, aes(x = gender, y = mean_evaluation, fill = gender)) +
introdataviz::geom_flat_violin(trim=FALSE, alpha = 0.4,
position = position_nudge(x = rain_height+.05),
na.rm=TRUE) +
geom_point(aes(colour = gender), size = 2, alpha = .5, show.legend = FALSE,
position = position_jitter(width = rain_height, height = 0)) +
geom_boxplot(width = rain_height, alpha = 0.4, show.legend = FALSE,
outlier.shape = NA, position = position_nudge(x = -rain_height*2)) +
ggtitle("Raincloud plot") +
scale_y_continuous(breaks = pretty_breaks(n = 7),
limits = c(1,7),
name = "Mean self-reported evaluation") +
scale_x_discrete(name = "Gender") +
coord_flip() +
theme_classic() +
theme(legend.position = "none")
(sr_gender_violin | sr_gender_raincloud)/sr_gender_hist
results_mean_evaluation_gender <- wilcox.test(mean_evaluation ~ gender, data = male_female_subset,
alternative = "two.sided", exact = FALSE)
results_mean_evaluation_gender
box_amp <- ggplot(data_processed_after_exclusions, aes(y = AMP_score)) +
geom_boxplot(width = 0.2, fill = "dodgerblue") +
scale_y_continuous(breaks = NULL,
label = NULL,
name = "") +
scale_x_continuous(limits = c(0,1),
breaks = pretty_breaks(n = 4),
name = "AMP score") +
ggtitle("Boxplot") +
theme_classic()
dens_amp + hist_amp + box_amp + plot_annotation("Descriptive plots for AMP evaluations")
box_amp <- ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_boxplot(width = 0.2, fill = "dodgerblue") +
scale_y_continuous(breaks = NULL,
label = NULL,
name = "") +
scale_x_continuous(limits = c(0,1),
breaks = pretty_breaks(n = 4),
name = "AMP score") +
ggtitle("Boxplot") +
theme_classic()
dens_amp + hist_amp + box_amp + plot_annotation("Descriptive plots for AMP evaluations")
