pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
)
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
filer(exclude_impossible_values == "exclude")
tmutate(exclude_impossible_values = if_any(
where(is.numeric),
~all(between(.x, 1, 6), na.rm = TRUE)
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
filter(exclude_impossible_values == "exclude")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
filter(exclude_impossible_values == "exclude")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values")
View(data_bfi_exclude_impossible_values)
View(data_bfi)
View(data_bfi_exclude_impossible_values)
filter(exclude_impossible_values == "exclude")
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
filter(exclude_impossible_values == "exclude")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values")
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values") |>
filter(exclude_impossible_values = "exclude")
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values") |>
filter(exclude_impossible_values == "exclude")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
group_by(unique_id |> )
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
group_by(unique_id) |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
pivot_wider(names_from = "scale", values_from = "values")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
pivot_longer(cols = -unique_id, names_to = "scale", values_to = "values") |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
) |>
group_by(unique_id) |>
pivot_wider(names_from = "scale", values_from = "values")
View(data_bfi_exclude_impossible_values)
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = case_when(values > 6 ~ "exclude",
values < 1 ~ "exclude",
TRUE ~ "include")
)
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(
case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(
case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
) |>
group_by(unique_id) |>
pivot_wider(names_from = "scale", values_from = "values")
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(
case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(select_if(is.numeric),
case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(select_if(is.numeric),
~case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(select_if(is.numeric()),
~case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = across(
where(is.numeric),
~case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
)
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_any(
where(is.numeric),
~case_when(.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_any(
.x > 6 ~ "exclude",
.x < 1 ~ "exclude",
TRUE ~ "include")
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1,6)
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1,6)
)
)
View(data_bfi_exclude_impossible_values)
# constant changes
data_bfi <- data_bfi |>
mutate(unique_id = as.character(unique_id))
# Reverse negatively worded items
data_bfi_recoded <- data_bfi |>
mutate(
across((negatively_worded),
~ recode(.x, `1` = 6, `2` = 5, `4` = 3, `5` = 2, `6` = 1))
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1,6)
)
)
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1,6), na.rm = TRUE
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1,6), na.rm = TRUE)
)
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1,6, na.rm = TRUE))
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~ifelse(between(.x, 1, 6), "exclude", "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~if_else(between(.x, 1, 6), "exclude", "include")
)
)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)
)
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
) |>
mutate(exclude_impossible_values = recode(FALSE = "exclude", NA = "include"))
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = recode(FALSE = "exclude", NA = "include"))
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = recode(exclude_impossible_values, FALSE = "exclude", NA = "include"))
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = recode(exclude_impossible_values, `FALSE` = "exclude", `NA` = "include"))
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = as.character(exclude_impossible_values)) |>
mutate(exclude_impossible_values = recode(exclude_impossible_values, "FALSE" = "exclude", "NA" = "include"))
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = as.character(exclude_impossible_values)) |>
mutate(exclude_impossible_values = recode(exclude_impossible_values, "FALSE" = "exclude", NA = "include"))
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = as.character(exclude_impossible_values)) |>
mutate(exclude_impossible_values = recode(exclude_impossible_values, "FALSE" = "exclude", `NA` = "include"))
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(exclude_impossible_values == is.na ~ "include",
TRUE ~ "exclude"
)
if_else(between(.x, 1, 6), "exclude", "include")
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(exclude_impossible_values == is.na ~ "include",
TRUE ~ "exclude")
if_else(between(.x, 1, 6), "exclude", "include")
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(exclude_impossible_values == is.na ~ "include",
TRUE ~ "exclude"))
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(is.na(exclude_impossible_values) ~ "include",
TRUE ~ "exclude"))
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(FALSE ~ "exclude",
TRUE ~ "include"))
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(FALSE ~ "exclude",
TRUE ~ "include")) |>
filter(exclude_impossible_values == "exclude")
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(FALSE ~ "exclude",
TRUE ~ "include"))
View(data_bfi_exclude_impossible_values)
# Sanity check II (impossible values):
data_bfi_exclude_impossible_values <- data_bfi_recoded |>
mutate(exclude_impossible_values = if_all(
where(is.numeric),
~between(.x, 1, 6)
)) |>
mutate(exclude_impossible_values = case_when(exclude_impossible_values == FALSE ~ "exclude",
TRUE ~ "include")) |>
filter(exclude_impossible_values == "exclude")
View(data_bfi_exclude_impossible_values)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(starts_with("bfi_a") |>
if_all(is.na(), "exclude")
))
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(select(starts_with("bfi_a"),
is.na(), "exclude")
))
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(select(starts_with("bfi_a"),
~is.na(), "exclude")
))
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(
where(starts_with("bfi_a")),
~is.na(), "exclude")
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(
where(starts_with("bfi_a")),
is.na(), "exclude")
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(
where(starts_with("bfi_a")),
~is.na(.x), "exclude")
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(
where(starts_with("bfi_a")),
~is.na(.x), "exclude")
))
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(
where(starts_with("bfi_a")),
~is.na(.x), "exclude")
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = if_all(
where(starts_with("bfi_a")),
~is.na(.x))
)
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(starts_with("bfi_a") |>
mean)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(starts_with("bfi_a") |>
mean)
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(starts_with("bfi_a") |>
mean())
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(., starts_with("bfi_a") |>
mean())
)
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(starts_with("bfi_a")) |>
mean())
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(~starts_with("bfi_a")) |>
mean())
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
mutate(bfi_a = select(., ~starts_with("bfi_a")) |>
mean())
#
data_bfi_exclude_missing_values <- data_bfi_recoded |>
group_by(starts_with("bfi_a"))
?pivot_longer
# Mean-score the different subscales
data_bfi_mean_score <- data_bfi_exclude_impossible_values |>
pivot_longer(cols = -c("unique_id", "exclude_impossible_values"),
names_to = "scale", values_to = "values")
View(data_bfi_mean_score)
# Mean-score the different subscales
data_bfi_mean_score <- data_bfi_exclude_impossible_values |>
pivot_longer(cols = -c("unique_id"),
names_to = "scale", values_to = "values")
# Mean-score the different subscales
data_bfi_mean_score <- data_bfi_exclude_impossible_values |>
pivot_longer(cols = !(unique_id, exclude_impossible_values),
# Mean-score the different subscales
data_bfi_mean_score <- data_bfi_exclude_impossible_values |>
pivot_longer(cols = !("unique_id", "exclude_impossible_values"),
