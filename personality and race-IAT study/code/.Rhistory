shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Conscientiousness
lm(d_score ~ bfi_mean_c, data = data_processed_after_exclusions) |>
report()
# IAT and Extroversion
## Scatter plot: Extroversion
plot_iat_bfi_e <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_e, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Extroversion") +
ylab("D-score") +
ggtitle("Scatter Plot: Extroversion and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.8, 0.8)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Extroversion
lm(d_score ~ bfi_mean_e, data = data_processed_after_exclusions) |>
report()
# IAT and Neuroticism
## Scatter plot: Neuroticism
plot_iat_bfi_n <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_n, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Neuroticism") +
ylab("D-score") +
ggtitle("Scatter Plot: Neuroticism and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.8, 0.8)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Neuroticism
lm(d_score ~ bfi_mean_n, data = data_processed_after_exclusions) |>
report()
# IAT and Openness
## Scatter plot: Openness
plot_iat_bfi_o <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_o, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Openness") +
ylab("D-score") +
ggtitle("Scatter Plot: Openness and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.8, 0.8)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Openness
lm(d_score ~ bfi_mean_o, data = data_processed_after_exclusions) |>
report()
all_scatter_plots <- plot_iat_bfi_a + plot_iat_bfi_c + plot_iat_bfi_e + plot_iat_bfi_n + plot_iat_bfi_o +
plot_layout(widths = c(1, 1)) +
plot_annotation(title = "Scatter Plots of IAT and BFI Facets")
print(all_scatter_plots) |>
suppressMessages() |>
suppressWarnings()
# IAT and Agreeableness
## Scatterplot: Agreeableness
plot_iat_bfi_a <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_a, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Agreeableness") +
ylab("D-score") +
ggtitle("Scatter Plot: Agreeableness and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Agreeableness
lm(d_score ~ bfi_mean_a, data = data_processed_after_exclusions) |>
report()
# IAT and Conscientiousness
## Scatter plot: Conscientiousness
plot_iat_bfi_c <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_c, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Contientiousness") +
ylab("D-score") +
ggtitle("Scatter Plot: Contientiousnes and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Conscientiousness
lm(d_score ~ bfi_mean_c, data = data_processed_after_exclusions) |>
report()
# IAT and Extroversion
## Scatter plot: Extroversion
plot_iat_bfi_e <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_e, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Extroversion") +
ylab("D-score") +
ggtitle("Scatter Plot: Extroversion and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Extroversion
lm(d_score ~ bfi_mean_e, data = data_processed_after_exclusions) |>
report()
# IAT and Neuroticism
## Scatter plot: Neuroticism
plot_iat_bfi_n <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_n, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Neuroticism") +
ylab("D-score") +
ggtitle("Scatter Plot: Neuroticism and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Neuroticism
lm(d_score ~ bfi_mean_n, data = data_processed_after_exclusions) |>
report()
# IAT and Openness
## Scatter plot: Openness
plot_iat_bfi_o <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_o, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Openness") +
ylab("D-score") +
ggtitle("Scatter Plot: Openness and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Openness
lm(d_score ~ bfi_mean_o, data = data_processed_after_exclusions) |>
report()
all_scatter_plots <- plot_iat_bfi_a + plot_iat_bfi_c + plot_iat_bfi_e + plot_iat_bfi_n + plot_iat_bfi_o +
plot_layout(widths = c(1, 1)) +
plot_annotation(title = "Scatter Plots of IAT and BFI Facets")
print(all_scatter_plots) |>
suppressMessages() |>
suppressWarnings()
dir.create("../communications/plots")
ggsave("iat_bfi_scatter_plots.png",
plot = all_scatter_plots,
width = 10,
dpi = 300,
path = "../communications/plots")
ggsave("iat_bfi_scatter_plot.pdf",
plot = all_scatter_plots,
width = 10,
path = "../communications/plots")
ggsave("iat_bfi_scatter_plot.pdf",
plot = all_scatter_plots,
width = 15,
path = "../communications/plots")
ggsave("iat_bfi_scatter_plots.png",
plot = all_scatter_plots,
width = 15,
dpi = 300,
path = "../communications/plots")
# IAT and Agreeableness
## Scatterplot: Agreeableness
plot_iat_bfi_a <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_a, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Agreeableness") +
ylab("D-score") +
ggtitle("Scatter Plot: Agreeableness and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Agreeableness
lm(d_score ~ bfi_mean_a, data = data_processed_after_exclusions) |>
report()
# IAT and Conscientiousness
## Scatter plot: Conscientiousness
plot_iat_bfi_c <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_c, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Contientiousness") +
ylab("D-score") +
ggtitle("Scatter Plot: Contientiousness and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Conscientiousness
lm(d_score ~ bfi_mean_c, data = data_processed_after_exclusions) |>
report()
# IAT and Extroversion
## Scatter plot: Extroversion
plot_iat_bfi_e <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_e, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Extroversion") +
ylab("D-score") +
ggtitle("Scatter Plot: Extroversion and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Extroversion
lm(d_score ~ bfi_mean_e, data = data_processed_after_exclusions) |>
report()
# IAT and Neuroticism
## Scatter plot: Neuroticism
plot_iat_bfi_n <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_n, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Neuroticism") +
ylab("D-score") +
ggtitle("Scatter Plot: Neuroticism and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Neuroticism
lm(d_score ~ bfi_mean_n, data = data_processed_after_exclusions) |>
report()
# IAT and Openness
## Scatter plot: Openness
plot_iat_bfi_o <- data_processed_after_exclusions |>
mutate(extreme_values = ifelse(between(d_score, quantile(d_score, 0.1), quantile(d_score, 0.9)), "Normal Values", "Extreme Values")) |>
ggplot(aes(x = bfi_mean_o, y = d_score, group = extreme_values)) +
geom_point(aes(shape = extreme_values, color = extreme_values), alpha = 0.8) +
geom_smooth(aes(group = 1), method = "lm", fullrange = TRUE) +
scale_x_continuous(breaks = pretty_breaks(n = 6),
limits = c(1, 6)) +
scale_y_continuous(breaks = pretty_breaks(n = 8),
limits = c(-2, 2)) +
xlab("Mean Openness") +
ylab("D-score") +
ggtitle("Scatter Plot: Openness and D-score") +
labs(caption = "Note: Extreme values are defined as the top/bottom 10% of the values.") +
theme_classic() +
theme(plot.caption = element_text(hjust = 0),
legend.position = c(0.9, 0.9)) +
guides(color = guide_legend("Outliers"),
shape = guide_legend("Outliers")) +
scale_shape_manual(values = c(17,16)) +
scale_color_manual(values = wes_palette("GrandBudapest1", n = 2, type = "continuous"))
## Linear regression: Openness
lm(d_score ~ bfi_mean_o, data = data_processed_after_exclusions) |>
report()
dir.create("../communications/plots")
ggsave("iat_bfi_scatter_plots.png",
plot = all_scatter_plots,
width = 15,
hight = 10,
dpi = 300,
path = "../communications/plots")
dir.create("../communications/plots")
ggsave("iat_bfi_scatter_plots.png",
plot = all_scatter_plots,
width = 15,
height = 10,
dpi = 300,
path = "../communications/plots")
ggsave("iat_bfi_scatter_plot.pdf",
plot = all_scatter_plots,
width = 15,
height = 10,
path = "../communications/plots")
all_scatter_plots <- plot_iat_bfi_a + plot_iat_bfi_c + plot_iat_bfi_e + plot_iat_bfi_n + plot_iat_bfi_o +
plot_layout(widths = c(1, 1)) +
plot_annotation(title = "Scatter Plots: IAT and BFI Facets")
print(all_scatter_plots) |>
suppressMessages() |>
suppressWarnings()
dir.create("../communications/plots")
ggsave("iat_bfi_scatter_plots.png",
plot = all_scatter_plots,
width = 15,
height = 10,
dpi = 300,
path = "../communications/plots")
ggsave("iat_bfi_scatter_plot.pdf",
plot = all_scatter_plots,
width = 15,
height = 10,
path = "../communications/plots")
# Reverse negatively worded items with the vector constructed above
data_bfi_recoded <- data_bfi |>
mutate(
across(all_of(negatively_worded),
~ recode(.x, `1` = 6, `2` = 5, `3` = 4,
`4` = 3, `5` = 2, `6` = 1))
)
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)        # for general data wrangling/tidying
library(janitor)          # for general data wrangling/tidying
library(openxlsx)         # for writing excel files (codebook)
# read in BFI data and immediately clean names
data_bfi <- read_csv("../data/raw/data_raw_bfi.csv") |>
janitor::clean_names()
# read in IAT data and immediately clean names
data_iat <- read_csv("../data/raw/data_raw_iat.csv") |>
janitor::clean_names()
# read in IAT data and immediately clean names
data_demographics <- read_csv("../data/raw/data_raw_demographics.csv") |>
janitor::clean_names()
data_demographics_clean <- data_demographics |>
drop_na(unique_id) |>
pivot_wider(names_from = "variable", values_from = "response") |>
mutate(age = ifelse(is.na(age), "missing/error/others", age),
sex = ifelse(is.na(sex), "missing/error/others", sex),
sex = recode(sex, "f" = "female", "m" = "male"),
unique_id = as.character(unique_id))
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)        # for general data wrangling/tidying
library(janitor)          # for general data wrangling/tidying
library(openxlsx)         # for writing excel files (codebook)
# read in BFI data and immediately clean names
data_bfi <- read_csv("../data/raw/data_raw_bfi.csv") |>
janitor::clean_names()
# read in IAT data and immediately clean names
data_iat <- read_csv("../data/raw/data_raw_iat.csv") |>
janitor::clean_names()
# read in IAT data and immediately clean names
data_demographics <- read_csv("../data/raw/data_raw_demographics.csv") |>
janitor::clean_names()
data_demographics_clean <- data_demographics |>
drop_na(unique_id) |>
pivot_wider(names_from = "variable", values_from = "response") |>
mutate(age = ifelse(is.na(age), "missing/error/others", age),
sex = ifelse(is.na(sex), "missing/error/others", sex),
sex = recode(sex, "f" = "female", "m" = "male"),
unique_id = as.character(unique_id))
# Construct a vector of all negatively worded items
negatively_worded <- c("bfi_a1", "bfi_a3", "bfi_a6", "bfi_a8",
"bfi_c2", "bfi_c4", "bfi_c5", "bfi_c9",
"bfi_e2", "bfi_e5", "bfi_e7",
"bfi_n2", "bfi_n5", "bfi_n7",
"bfi_o7", "bfi_o9")
# Reverse negatively worded items with the vector constructed above
data_bfi_recoded <- data_bfi |>
mutate(
across(all_of(negatively_worded),
~ recode(.x, `1` = 6, `2` = 5, `3` = 4,
`4` = 3, `5` = 2, `6` = 1))
)
# Calculate mean1 (mean of block 3 and 6)
data_iat_mean1 <- data_iat_clean |>
filter(block_number %in% c(3, 6)) |>
group_by(unique_id) |>
summarize(mean1 = mean(trial_rt, na.rm = TRUE))
# Some data wrangling/tidying for the IAT data (change header names, clean/rename header names, select relevant columns and rows)
data_iat_clean <- data_iat |>
row_to_names(row_number = 1) |>
clean_names() |>
rename(trial_rt = trial_reaction_time_in_ms) |>
select(unique_id, block_number, trial_accuracy, trial_rt) |>
mutate(trial_rt = as.numeric(trial_rt)) |>
filter(!block_number %in% c(1,2,5))
# Some data wrangling/tidying for the IAT data (change header names, clean/rename header names, select relevant columns and rows)
data_iat_clean <- data_iat |>
janitor::row_to_names(row_number = 1) |>
janitor::clean_names() |>
rename(trial_rt = trial_reaction_time_in_ms) |>
select(unique_id, block_number, trial_accuracy, trial_rt) |>
mutate(trial_rt = as.numeric(trial_rt)) |>
filter(!block_number %in% c(1,2,5))
# Calculate mean1 (mean of block 3 and 6)
data_iat_mean1 <- data_iat_clean |>
filter(block_number %in% c(3, 6)) |>
group_by(unique_id) |>
summarize(mean1 = mean(trial_rt, na.rm = TRUE))
# Calculate mean2 (mean of block 4 and 7)
data_iat_mean2 <- data_iat_clean |>
filter(block_number %in% c(4, 7)) |>
group_by(unique_id) |>
summarize(mean2 = mean(trial_rt, na.rm = TRUE))
# Calculate SD (SD of block 3, 4, 6, 7)
data_iat_SD <- data_iat_clean |>
filter(block_number %in% c(3, 4, 6 ,7))
group_by(unique_id) |>
summarize(SD = sd(trial_rt, na.rm = TRUE))
# Calculate mean1 (mean of block 3 and 6)
data_iat_mean1 <- data_iat_clean |>
filter(block_number %in% c(3, 6)) |>
group_by(unique_id) |>
summarize(mean1 = mean(trial_rt, na.rm = TRUE))
# Calculate mean2 (mean of block 4 and 7)
data_iat_mean2 <- data_iat_clean |>
filter(block_number %in% c(4, 7)) |>
group_by(unique_id) |>
summarize(mean2 = mean(trial_rt, na.rm = TRUE))
# Calculate SD (SD of block 3, 4, 6, 7)
data_iat_SD <- data_iat_clean |>
filter(block_number %in% c(3, 4, 6 ,7))
group_by(unique_id) |>
summarize(SD = sd(trial_rt, na.rm = TRUE))
